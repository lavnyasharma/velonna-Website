"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/product/[hsn]/page",{

/***/ "(app-pages-browser)/./src/axios.js":
/*!**********************!*\
  !*** ./src/axios.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCart: function() { return /* binding */ addToCart; },\n/* harmony export */   axiosInstance: function() { return /* binding */ axiosInstance; },\n/* harmony export */   deleteFromCart: function() { return /* binding */ deleteFromCart; },\n/* harmony export */   fetchProductList: function() { return /* binding */ fetchProductList; },\n/* harmony export */   getCart: function() { return /* binding */ getCart; },\n/* harmony export */   getUserInfo: function() { return /* binding */ getUserInfo; },\n/* harmony export */   storeTokens: function() { return /* binding */ storeTokens; },\n/* harmony export */   toggleTokenRefresh: function() { return /* binding */ toggleTokenRefresh; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Configurations\nconst BASE_URL = \"https://api.velonna.co/\";\nlet shouldRefreshToken = false; // Flag to enable/disable token refreshing\n// Create an Axios instance\nconst axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: BASE_URL,\n    timeout: TIMEOUT\n});\n// Helper function to get token from localStorage\nconst getAccessToken = ()=>{\n    try {\n        const token = localStorage.getItem(\"accessToken\");\n        return token || null;\n    } catch (error) {\n        console.error(\"Error fetching access token:\", error);\n        return null;\n    }\n};\n// Helper function to store tokens in localStorage\nconst storeTokens = (accessToken, refreshToken)=>{\n    try {\n        if (accessToken) localStorage.setItem(\"accessToken\", accessToken);\n        if (refreshToken) localStorage.setItem(\"refreshToken\", refreshToken);\n    } catch (error) {\n        console.error(\"Error storing tokens:\", error);\n    }\n};\n// Function to refresh the access token\nconst refreshAccessToken = async ()=>{\n    try {\n        const refreshToken = localStorage.getItem(\"refreshToken\");\n        if (!refreshToken) throw new Error(\"No refresh token available\");\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"\".concat(BASE_URL, \"/refresh-token/\"), {\n            refresh_token: refreshToken\n        });\n        const { access_token: newAccessToken } = response.data || {};\n        if (newAccessToken) {\n            await storeTokens(newAccessToken, refreshToken);\n            return newAccessToken;\n        } else {\n            throw new Error(\"Failed to refresh access token\");\n        }\n    } catch (error) {\n        console.error(\"Error refreshing token:\", error);\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n        throw error;\n    }\n};\n// Axios request interceptor for adding Authorization and Content-Type headers\naxiosInstance.interceptors.request.use(async (config)=>{\n    const accessToken = getAccessToken();\n    if (accessToken) config.headers[\"Authorization\"] = \"Bearer \".concat(accessToken);\n    config.headers[\"Content-Type\"] = \"application/json\"; // Ensure Content-Type is application/json\n    return config;\n}, (error)=>Promise.reject(error));\n// Axios response interceptor to handle 401 errors and token refresh\naxiosInstance.interceptors.response.use((response)=>response, async (error)=>{\n    const { config, response } = error;\n    if ((response === null || response === void 0 ? void 0 : response.status) === 401 && shouldRefreshToken) {\n        shouldRefreshToken = false;\n        try {\n            const newAccessToken = await refreshAccessToken();\n            config.headers[\"Authorization\"] = \"Bearer \".concat(newAccessToken);\n            return axiosInstance(config);\n        } catch (refreshError) {\n            console.error(\"Token refresh failed:\", refreshError);\n            throw refreshError;\n        } finally{\n            shouldRefreshToken = true;\n        }\n    }\n    return Promise.reject(error);\n});\n// API Functions\nconst getUserInfo = async (username)=>{\n    try {\n        const response = await axiosInstance.get(\"/user/\".concat(username, \"/\"));\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching user info:\", error);\n        throw error;\n    }\n};\nconst fetchProductList = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    try {\n        const response = await axiosInstance.get(\"/product-lists/\", {\n            params: {\n                page,\n                limit\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching product list:\", error);\n        throw error;\n    }\n};\nconst addToCart = async (productId, quantity)=>{\n    try {\n        const data = {\n            product: productId,\n            quantity: String(quantity)\n        };\n        const response = await axiosInstance.post(\"/cart/\", data);\n        return response;\n    } catch (error) {\n        console.error(\"Error adding product to cart:\", error);\n        throw error;\n    }\n};\nconst getCart = async ()=>{\n    try {\n        const response = await axiosInstance.get(\"/cart/details/\");\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching cart:\", error);\n        throw error;\n    }\n};\nconst deleteFromCart = async (cartItemId)=>{\n    try {\n        const response = await axiosInstance.delete(\"cart-item/\".concat(cartItemId, \"/\"));\n        console.log(response);\n        console.log(response.status);\n        if (!response || response.status === 204) {\n            console.log(response);\n            console.log(response.status);\n            console.log(\"Item successfully deleted\");\n            return {}; // Return an empty object or handle it in the caller\n        }\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            console.error(\"Server responded with error:\", error.response.data);\n        } else if (error.request) {\n            console.error(\"No response received:\", error.request);\n        } else {\n            console.error(\"Error setting up request:\", error.message);\n        }\n        throw error;\n    }\n};\n// Utility function to toggle token refresh behavior\nconst toggleTokenRefresh = (status)=>{\n    shouldRefreshToken = status;\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUFBVztRQUNwRXJDLFFBQVF1QyxHQUFHLENBQUNoQztRQUNaUCxRQUFRdUMsR0FBRyxDQUFDaEMsU0FBU2MsTUFBTTtRQUMzQixJQUFJLENBQUNkLFlBQVlBLFNBQVNjLE1BQU0sS0FBSyxLQUFLO1lBQ3hDckIsUUFBUXVDLEdBQUcsQ0FBQ2hDO1lBQ1pQLFFBQVF1QyxHQUFHLENBQUNoQyxTQUFTYyxNQUFNO1lBQzNCckIsUUFBUXVDLEdBQUcsQ0FBQztZQUNaLE9BQU8sQ0FBQyxHQUFHLG9EQUFvRDtRQUNqRTtRQUNBLE9BQU9oQyxTQUFTSyxJQUFJO0lBQ3RCLEVBQUUsT0FBT2IsT0FBTztRQUNkLElBQUlBLE1BQU1RLFFBQVEsRUFBRTtZQUNsQlAsUUFBUUQsS0FBSyxDQUFDLGdDQUFnQ0EsTUFBTVEsUUFBUSxDQUFDSyxJQUFJO1FBQ25FLE9BQU8sSUFBSWIsTUFBTWdCLE9BQU8sRUFBRTtZQUN4QmYsUUFBUUQsS0FBSyxDQUFDLHlCQUF5QkEsTUFBTWdCLE9BQU87UUFDdEQsT0FBTztZQUNMZixRQUFRRCxLQUFLLENBQUMsNkJBQTZCQSxNQUFNeUMsT0FBTztRQUMxRDtRQUNBLE1BQU16QztJQUNSO0FBQ0YsRUFBRTtBQUVGLG9EQUFvRDtBQUM3QyxNQUFNMEMscUJBQXFCLENBQUNwQjtJQUNqQ2hDLHFCQUFxQmdDO0FBQ3ZCLEVBQUU7QUFFb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2F4aW9zLmpzP2QyYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuLy8gQ29uZmlndXJhdGlvbnNcbmNvbnN0IEJBU0VfVVJMID0gXCJodHRwczovL2FwaS52ZWxvbm5hLmNvL1wiO1xuXG5sZXQgc2hvdWxkUmVmcmVzaFRva2VuID0gZmFsc2U7IC8vIEZsYWcgdG8gZW5hYmxlL2Rpc2FibGUgdG9rZW4gcmVmcmVzaGluZ1xuXG4vLyBDcmVhdGUgYW4gQXhpb3MgaW5zdGFuY2VcbmNvbnN0IGF4aW9zSW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoe1xuICBiYXNlVVJMOiBCQVNFX1VSTCxcbiAgdGltZW91dDogVElNRU9VVCxcbn0pO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IHRva2VuIGZyb20gbG9jYWxTdG9yYWdlXG5jb25zdCBnZXRBY2Nlc3NUb2tlbiA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NUb2tlbicpO1xuICAgIHJldHVybiB0b2tlbiB8fCBudWxsO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGFjY2VzcyB0b2tlbjonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBzdG9yZSB0b2tlbnMgaW4gbG9jYWxTdG9yYWdlXG5jb25zdCBzdG9yZVRva2VucyA9IChhY2Nlc3NUb2tlbiwgcmVmcmVzaFRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgaWYgKGFjY2Vzc1Rva2VuKSBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWNjZXNzVG9rZW4nLCBhY2Nlc3NUb2tlbik7XG4gICAgaWYgKHJlZnJlc2hUb2tlbikgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3JlZnJlc2hUb2tlbicsIHJlZnJlc2hUb2tlbik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc3RvcmluZyB0b2tlbnM6JywgZXJyb3IpO1xuICB9XG59O1xuXG4vLyBGdW5jdGlvbiB0byByZWZyZXNoIHRoZSBhY2Nlc3MgdG9rZW5cbmNvbnN0IHJlZnJlc2hBY2Nlc3NUb2tlbiA9IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZWZyZXNoVG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncmVmcmVzaFRva2VuJyk7XG4gICAgaWYgKCFyZWZyZXNoVG9rZW4pIHRocm93IG5ldyBFcnJvcignTm8gcmVmcmVzaCB0b2tlbiBhdmFpbGFibGUnKTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChgJHtCQVNFX1VSTH0vcmVmcmVzaC10b2tlbi9gLCB7IHJlZnJlc2hfdG9rZW46IHJlZnJlc2hUb2tlbiB9KTtcbiAgICBjb25zdCB7IGFjY2Vzc190b2tlbjogbmV3QWNjZXNzVG9rZW4gfSA9IHJlc3BvbnNlLmRhdGEgfHwge307XG5cbiAgICBpZiAobmV3QWNjZXNzVG9rZW4pIHtcbiAgICAgIGF3YWl0IHN0b3JlVG9rZW5zKG5ld0FjY2Vzc1Rva2VuLCByZWZyZXNoVG9rZW4pO1xuICAgICAgcmV0dXJuIG5ld0FjY2Vzc1Rva2VuO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byByZWZyZXNoIGFjY2VzcyB0b2tlbicpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZWZyZXNoaW5nIHRva2VuOicsIGVycm9yKTtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWNjZXNzVG9rZW4nKTtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgncmVmcmVzaFRva2VuJyk7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbi8vIEF4aW9zIHJlcXVlc3QgaW50ZXJjZXB0b3IgZm9yIGFkZGluZyBBdXRob3JpemF0aW9uIGFuZCBDb250ZW50LVR5cGUgaGVhZGVyc1xuYXhpb3NJbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoXG4gIGFzeW5jIChjb25maWcpID0+IHtcbiAgICBjb25zdCBhY2Nlc3NUb2tlbiA9IGdldEFjY2Vzc1Rva2VuKCk7XG4gICAgaWYgKGFjY2Vzc1Rva2VuKSBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gYEJlYXJlciAke2FjY2Vzc1Rva2VufWA7XG4gICAgY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nOyAvLyBFbnN1cmUgQ29udGVudC1UeXBlIGlzIGFwcGxpY2F0aW9uL2pzb25cbiAgICByZXR1cm4gY29uZmlnO1xuICB9LFxuICAoZXJyb3IpID0+IFByb21pc2UucmVqZWN0KGVycm9yKVxuKTtcblxuLy8gQXhpb3MgcmVzcG9uc2UgaW50ZXJjZXB0b3IgdG8gaGFuZGxlIDQwMSBlcnJvcnMgYW5kIHRva2VuIHJlZnJlc2hcbmF4aW9zSW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShcbiAgKHJlc3BvbnNlKSA9PiByZXNwb25zZSxcbiAgYXN5bmMgKGVycm9yKSA9PiB7XG4gICAgY29uc3QgeyBjb25maWcsIHJlc3BvbnNlIH0gPSBlcnJvcjtcblxuICAgIGlmIChyZXNwb25zZT8uc3RhdHVzID09PSA0MDEgJiYgc2hvdWxkUmVmcmVzaFRva2VuKSB7XG4gICAgICBzaG91bGRSZWZyZXNoVG9rZW4gPSBmYWxzZTtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IG5ld0FjY2Vzc1Rva2VuID0gYXdhaXQgcmVmcmVzaEFjY2Vzc1Rva2VuKCk7XG4gICAgICAgIGNvbmZpZy5oZWFkZXJzWydBdXRob3JpemF0aW9uJ10gPSBgQmVhcmVyICR7bmV3QWNjZXNzVG9rZW59YDtcbiAgICAgICAgcmV0dXJuIGF4aW9zSW5zdGFuY2UoY29uZmlnKTtcbiAgICAgIH0gY2F0Y2ggKHJlZnJlc2hFcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdUb2tlbiByZWZyZXNoIGZhaWxlZDonLCByZWZyZXNoRXJyb3IpO1xuICAgICAgICB0aHJvdyByZWZyZXNoRXJyb3I7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBzaG91bGRSZWZyZXNoVG9rZW4gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gIH1cbik7XG5cbi8vIEFQSSBGdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRVc2VySW5mbyA9IGFzeW5jICh1c2VybmFtZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3NJbnN0YW5jZS5nZXQoYC91c2VyLyR7dXNlcm5hbWV9L2ApO1xuICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHVzZXIgaW5mbzonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBmZXRjaFByb2R1Y3RMaXN0ID0gYXN5bmMgKHBhZ2UgPSAxLCBsaW1pdCA9IDEwKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvc0luc3RhbmNlLmdldChgL3Byb2R1Y3QtbGlzdHMvYCwge1xuICAgICAgcGFyYW1zOiB7IHBhZ2UsIGxpbWl0IH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdCBsaXN0OicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGFkZFRvQ2FydCA9IGFzeW5jIChwcm9kdWN0SWQsIHF1YW50aXR5KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGF0YSA9IHsgcHJvZHVjdDogcHJvZHVjdElkLCBxdWFudGl0eTogU3RyaW5nKHF1YW50aXR5KSB9O1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3NJbnN0YW5jZS5wb3N0KCcvY2FydC8nLCBkYXRhKTtcbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgYWRkaW5nIHByb2R1Y3QgdG8gY2FydDonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0ID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3NJbnN0YW5jZS5nZXQoJy9jYXJ0L2RldGFpbHMvJyk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgY2FydDonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVGcm9tQ2FydCA9IGFzeW5jIChjYXJ0SXRlbUlkKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvc0luc3RhbmNlLmRlbGV0ZShgY2FydC1pdGVtLyR7Y2FydEl0ZW1JZH0vYCk7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpXG4gICAgY29uc29sZS5sb2cocmVzcG9uc2Uuc3RhdHVzKVxuICAgIGlmICghcmVzcG9uc2UgfHwgcmVzcG9uc2Uuc3RhdHVzID09PSAyMDQpIHtcbiAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKVxuICAgICAgY29uc29sZS5sb2cocmVzcG9uc2Uuc3RhdHVzKVxuICAgICAgY29uc29sZS5sb2coJ0l0ZW0gc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQnKTtcbiAgICAgIHJldHVybiB7fTsgLy8gUmV0dXJuIGFuIGVtcHR5IG9iamVjdCBvciBoYW5kbGUgaXQgaW4gdGhlIGNhbGxlclxuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1NlcnZlciByZXNwb25kZWQgd2l0aCBlcnJvcjonLCBlcnJvci5yZXNwb25zZS5kYXRhKTtcbiAgICB9IGVsc2UgaWYgKGVycm9yLnJlcXVlc3QpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ05vIHJlc3BvbnNlIHJlY2VpdmVkOicsIGVycm9yLnJlcXVlc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzZXR0aW5nIHVwIHJlcXVlc3Q6JywgZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG4vLyBVdGlsaXR5IGZ1bmN0aW9uIHRvIHRvZ2dsZSB0b2tlbiByZWZyZXNoIGJlaGF2aW9yXG5leHBvcnQgY29uc3QgdG9nZ2xlVG9rZW5SZWZyZXNoID0gKHN0YXR1cykgPT4ge1xuICBzaG91bGRSZWZyZXNoVG9rZW4gPSBzdGF0dXM7XG59O1xuXG5leHBvcnQgeyBheGlvc0luc3RhbmNlLCBzdG9yZVRva2VucyB9O1xuIl0sIm5hbWVzIjpbImF4aW9zIiwiQkFTRV9VUkwiLCJzaG91bGRSZWZyZXNoVG9rZW4iLCJheGlvc0luc3RhbmNlIiwiY3JlYXRlIiwiYmFzZVVSTCIsInRpbWVvdXQiLCJUSU1FT1VUIiwiZ2V0QWNjZXNzVG9rZW4iLCJ0b2tlbiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJlcnJvciIsImNvbnNvbGUiLCJzdG9yZVRva2VucyIsImFjY2Vzc1Rva2VuIiwicmVmcmVzaFRva2VuIiwic2V0SXRlbSIsInJlZnJlc2hBY2Nlc3NUb2tlbiIsIkVycm9yIiwicmVzcG9uc2UiLCJwb3N0IiwicmVmcmVzaF90b2tlbiIsImFjY2Vzc190b2tlbiIsIm5ld0FjY2Vzc1Rva2VuIiwiZGF0YSIsInJlbW92ZUl0ZW0iLCJpbnRlcmNlcHRvcnMiLCJyZXF1ZXN0IiwidXNlIiwiY29uZmlnIiwiaGVhZGVycyIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJyZWZyZXNoRXJyb3IiLCJnZXRVc2VySW5mbyIsInVzZXJuYW1lIiwiZ2V0IiwiZmV0Y2hQcm9kdWN0TGlzdCIsInBhZ2UiLCJsaW1pdCIsInBhcmFtcyIsImFkZFRvQ2FydCIsInByb2R1Y3RJZCIsInF1YW50aXR5IiwicHJvZHVjdCIsIlN0cmluZyIsImdldENhcnQiLCJkZWxldGVGcm9tQ2FydCIsImNhcnRJdGVtSWQiLCJkZWxldGUiLCJsb2ciLCJtZXNzYWdlIiwidG9nZ2xlVG9rZW5SZWZyZXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/axios.js\n"));

/***/ })

});