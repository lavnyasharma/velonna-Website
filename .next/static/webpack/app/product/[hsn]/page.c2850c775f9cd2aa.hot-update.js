"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/product/[hsn]/page",{

/***/ "(app-pages-browser)/./src/axios.js":
/*!**********************!*\
  !*** ./src/axios.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCart: function() { return /* binding */ addToCart; },\n/* harmony export */   address: function() { return /* binding */ address; },\n/* harmony export */   axiosInstance: function() { return /* binding */ axiosInstance; },\n/* harmony export */   deleteFromCart: function() { return /* binding */ deleteFromCart; },\n/* harmony export */   fetchProductList: function() { return /* binding */ fetchProductList; },\n/* harmony export */   getCart: function() { return /* binding */ getCart; },\n/* harmony export */   getUserInfo: function() { return /* binding */ getUserInfo; },\n/* harmony export */   storeTokens: function() { return /* binding */ storeTokens; },\n/* harmony export */   toggleTokenRefresh: function() { return /* binding */ toggleTokenRefresh; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Configurations\nconst BASE_URL = \"https://api.velonna.co/\";\nlet shouldRefreshToken = false; // Flag to enable/disable token refreshing\n// Create an Axios instance\nconst axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: BASE_URL\n});\n// Helper function to get token from localStorage\nconst getAccessToken = ()=>{\n    try {\n        const token = localStorage.getItem(\"accessToken\");\n        return token || null;\n    } catch (error) {\n        console.error(\"Error fetching access token:\", error);\n        return null;\n    }\n};\n// Helper function to store tokens in localStorage\nconst storeTokens = (accessToken, refreshToken)=>{\n    try {\n        if (accessToken) localStorage.setItem(\"accessToken\", accessToken);\n        if (refreshToken) localStorage.setItem(\"refreshToken\", refreshToken);\n    } catch (error) {\n        console.error(\"Error storing tokens:\", error);\n    }\n};\n// Function to refresh the access token\nconst refreshAccessToken = async ()=>{\n    try {\n        const refreshToken = localStorage.getItem(\"refreshToken\");\n        if (!refreshToken) throw new Error(\"No refresh token available\");\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"\".concat(BASE_URL, \"/refresh-token/\"), {\n            refresh_token: refreshToken\n        });\n        const { access_token: newAccessToken } = response.data || {};\n        if (newAccessToken) {\n            await storeTokens(newAccessToken, refreshToken);\n            return newAccessToken;\n        } else {\n            throw new Error(\"Failed to refresh access token\");\n        }\n    } catch (error) {\n        console.error(\"Error refreshing token:\", error);\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n        throw error;\n    }\n};\n// Axios request interceptor for adding Authorization and Content-Type headers\naxiosInstance.interceptors.request.use(async (config)=>{\n    const accessToken = getAccessToken();\n    if (accessToken) config.headers[\"Authorization\"] = \"Bearer \".concat(accessToken);\n    config.headers[\"Content-Type\"] = \"application/json\"; // Ensure Content-Type is application/json\n    return config;\n}, (error)=>Promise.reject(error));\n// Axios response interceptor to handle 401 errors and token refresh\naxiosInstance.interceptors.response.use((response)=>response, async (error)=>{\n    const { config, response } = error;\n    if ((response === null || response === void 0 ? void 0 : response.status) === 401 && shouldRefreshToken) {\n        shouldRefreshToken = false;\n        try {\n            const newAccessToken = await refreshAccessToken();\n            config.headers[\"Authorization\"] = \"Bearer \".concat(newAccessToken);\n            return axiosInstance(config);\n        } catch (refreshError) {\n            console.error(\"Token refresh failed:\", refreshError);\n            throw refreshError;\n        } finally{\n            shouldRefreshToken = true;\n        }\n    }\n    return Promise.reject(error);\n});\n// API Functions\nconst getUserInfo = async (username)=>{\n    try {\n        const response = await axiosInstance.get(\"/user/\".concat(username, \"/\"));\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching user info:\", error);\n        throw error;\n    }\n};\nconst address = async ()=>{\n    try {\n        const response = await axiosInstance.get(\"/addresses\");\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching user info:\", error);\n        throw error;\n    }\n};\nconst fetchProductList = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    try {\n        const response = await axiosInstance.get(\"/product-lists/\", {\n            params: {\n                page,\n                limit\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching product list:\", error);\n        throw error;\n    }\n};\nconst addToCart = async (productId, quantity)=>{\n    try {\n        const data = {\n            product: productId,\n            quantity: String(quantity)\n        };\n        const response = await axiosInstance.post(\"/cart/\", data);\n        return response;\n    } catch (error) {\n        console.error(\"Error adding product to cart:\", error);\n        throw error;\n    }\n};\nconst getCart = async ()=>{\n    try {\n        const response = await axiosInstance.get(\"/cart/details/\");\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching cart:\", error);\n        throw error;\n    }\n};\nconst deleteFromCart = async (cartItemId)=>{\n    try {\n        const response = await axiosInstance.delete(\"cart-item/\".concat(cartItemId, \"/\"));\n        console.log(response);\n        console.log(response.status);\n        if (!response || response.status === 204) {\n            console.log(response);\n            console.log(response.status);\n            console.log(\"Item successfully deleted\");\n            return {}; // Return an empty object or handle it in the caller\n        }\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            console.error(\"Server responded with error:\", error.response.data);\n        } else if (error.request) {\n            console.error(\"No response received:\", error.request);\n        } else {\n            console.error(\"Error setting up request:\", error.message);\n        }\n        throw error;\n    }\n};\n// Utility function to toggle token refresh behavior\nconst toggleTokenRefresh = (status)=>{\n    shouldRefreshToken = status;\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/axios.js\n"));

/***/ })

});